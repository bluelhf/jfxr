plugins {
    id 'java-library'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'maven-publish'
}

group 'blue.lhf'
version '2.0.0'

repositories {
    mavenCentral()
    maven {
        url = 'https://raw.githubusercontent.com/bluelhf/Tasks/mvn-repo/'
    }

    maven {
        url = 'https://gitlab.com/api/v4/projects/18568066/packages/maven'
    }
}

javafx {
    version = '18-ea+3'
    modules("javafx.controls", "javafx.fxml")
    configuration = 'testCompileOnly'
}

configurations {
    implementation {
        transitive = false
        canBeResolved = true
    }
}


dependencies {
    implementation 'io.github.bluelhf:Tasks:0001'
    implementation 'mx.kenzie:overlord:1.0.1'
    testImplementation sourceSets.main.output.filter {file -> file.exists()}
}

jar {
    from {
        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.register('testJar', Jar) {
    dependsOn build

    duplicatesStrategy = DuplicatesStrategy.WARN
    from sourceSets.main.output
    from sourceSets.test.output

    archiveClassifier = 'test'

    from {
        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes(
                "Main-Class": "blue.lhf.jfxr.test.JFXRTest"
        )
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = String.valueOf(group)
            artifactId = project.name
            version = String.valueOf(project.version)

            artifact jar
        }
    }

    repositories {
        maven {
            name = "bluelhf"
            url = "https://maven.lhf.blue" + (project.version.endsWith("-SNAPSHOT") ? "/snapshots" : "/releases")
            credentials {
                username = System.getenv("BLUELHF_USER")
                password = System.getenv("BLUELHF_PASS")
            }
        }
    }
}
